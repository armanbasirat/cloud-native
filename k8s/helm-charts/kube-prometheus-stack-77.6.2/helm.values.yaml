---
alertmanager:
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      #nginx.ingress.kubernetes.io/auth-realm: Authentication Required
      #nginx.ingress.kubernetes.io/auth-secret: alertmanager-auth
      #nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/affinity: cookie
    hosts:
      - <alertmanager-url>
    ingressClassName: nginx

  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: csi-cephfs-sc
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi

grafana:
  defaultDashboardsTimezone: utc
  adminPassword: <password>
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - <alertmanager-url>
    ingressClassName: nginx

  persistence:
    type: pvc
    enabled: true
    storageClassName: csi-cephfs-sc
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    finalizers:
      - kubernetes.io/pvc-protection

prometheus:
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      #nginx.ingress.kubernetes.io/auth-realm: Authentication Required
      #nginx.ingress.kubernetes.io/auth-secret: prometheus-auth
      #nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/affinity: cookie
    hosts:
      - <prometheus-url>
    ingressClassName: nginx

  prometheusSpec:
    retention: 15d
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: csi-cephfs-sc
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    resources:
      limits:
        cpu: 1500m
        memory: 15Gi
      requests:
        cpu: 500m
        memory: 5Gi	  